{"version":3,"sources":["Coordinates.ts"],"names":["canvas2Cartesian","v","center","x","y","cartesian2Canvas","cartesian2Polar","theta","Math","atan2","radius","sqrt","polar2Cartesian","p","cos","sin","polar2Canvas","canvas2Polar"],"mappings":"AAUA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAYC,MAAZ,CAA+B,CAC7D,UACA,MAAO,CACLC,CAAC,CAAEF,CAAC,CAACE,CAAF,CAAMD,MAAM,CAACC,CADX,CAELC,CAAC,CAAE,CAAC,CAAD,EAAMH,CAAC,CAACG,CAAF,CAAMF,MAAM,CAACE,CAAnB,CAFE,CAAP,CAID,CANM,CAWP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,CAAD,CAAYC,MAAZ,CAA+B,CAC7D,UACA,MAAO,CACLC,CAAC,CAAEF,CAAC,CAACE,CAAF,CAAMD,MAAM,CAACC,CADX,CAELC,CAAC,CAAE,CAAC,CAAD,CAAKH,CAAC,CAACG,CAAP,CAAWF,MAAM,CAACE,CAFhB,CAAP,CAID,CANM,CAWP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACL,CAAD,CAAe,CAC5C,UACA,MAAO,CACLM,KAAK,CAAEC,IAAI,CAACC,KAAL,CAAWR,CAAC,CAACG,CAAb,CAAgBH,CAAC,CAACE,CAAlB,CADF,CAELO,MAAM,CAAEF,IAAI,CAACG,IAAL,CAAU,SAAAV,CAAC,CAACE,CAAF,CAAO,CAAP,WAAWF,CAAC,CAACG,CAAb,CAAkB,CAAlB,CAAV,CAFH,CAAP,CAID,CANM,CAWP,MAAO,IAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAmB,CAChD,UACA,MAAO,CACLV,CAAC,CAAEU,CAAC,CAACH,MAAF,CAAWF,IAAI,CAACM,GAAL,CAASD,CAAC,CAACN,KAAX,CADT,CAELH,CAAC,CAAES,CAAC,CAACH,MAAF,CAAWF,IAAI,CAACO,GAAL,CAASF,CAAC,CAACN,KAAX,CAFT,CAAP,CAID,CANM,CAWP,MAAO,IAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,CAAD,CAAgBX,MAAhB,CAAmC,CAC7D,UACA,MAAOG,CAAAA,gBAAgB,CAACO,eAAe,CAACC,CAAD,CAAhB,CAAqBX,MAArB,CAAvB,CACD,CAHM,CAQP,MAAO,IAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAChB,CAAD,CAAYC,MAAZ,CAA+B,CACzD,UACA,MAAOI,CAAAA,eAAe,CAACN,gBAAgB,CAACC,CAAD,CAAIC,MAAJ,CAAjB,CAAtB,CACD,CAHM","sourcesContent":["import { Vector } from \"./Vectors\";\n\nexport interface PolarPoint {\n  theta: number;\n  radius: number;\n}\n\n/**\n * @worklet\n */\nexport const canvas2Cartesian = (v: Vector, center: Vector) => {\n  \"worklet\";\n  return {\n    x: v.x - center.x,\n    y: -1 * (v.y - center.y),\n  };\n};\n\n/**\n * @worklet\n */\nexport const cartesian2Canvas = (v: Vector, center: Vector) => {\n  \"worklet\";\n  return {\n    x: v.x + center.x,\n    y: -1 * v.y + center.y,\n  };\n};\n\n/**\n * @worklet\n */\nexport const cartesian2Polar = (v: Vector) => {\n  \"worklet\";\n  return {\n    theta: Math.atan2(v.y, v.x),\n    radius: Math.sqrt(v.x ** 2 + v.y ** 2),\n  };\n};\n\n/**\n * @worklet\n */\nexport const polar2Cartesian = (p: PolarPoint) => {\n  \"worklet\";\n  return {\n    x: p.radius * Math.cos(p.theta),\n    y: p.radius * Math.sin(p.theta),\n  };\n};\n\n/**\n * @worklet\n */\nexport const polar2Canvas = (p: PolarPoint, center: Vector) => {\n  \"worklet\";\n  return cartesian2Canvas(polar2Cartesian(p), center);\n};\n\n/**\n * @worklet\n */\nexport const canvas2Polar = (v: Vector, center: Vector) => {\n  \"worklet\";\n  return cartesian2Polar(canvas2Cartesian(v, center));\n};\n"]}
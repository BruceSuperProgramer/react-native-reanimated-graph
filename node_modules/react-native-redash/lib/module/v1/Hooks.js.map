{"version":3,"sources":["Hooks.ts"],"names":["Animated","useRef","onGestureEvent","panGestureHandler","pinchGestureHandler","rotationGestureHandler","tapGestureHandler","scrollHandler","vec","loop","Clock","Value","diff","set","useCode","debug","block","useConst","initialValue","ref","current","undefined","value","useGestureHandler","nativeEvent","usePanGestureHandler","useRotationGestureHandler","usePinchGestureHandler","useTapGestureHandler","useScrollHandler","useVector","defaultValues","createValue","useVectors","map","values","useClock","useValue","usePhysicsState","time","position","velocity","finished","useSpringConfig","config","toValue","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","useLoop","duration","boomerang","progress","useValues","v","useClocks","numberOfClocks","Array","fill","useDiff","node","dDiff","useDebug","keys","Object","name"],"mappings":"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","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { useRef } from \"react\";\n\nimport {\n  onGestureEvent,\n  panGestureHandler,\n  pinchGestureHandler,\n  rotationGestureHandler,\n  tapGestureHandler,\n  scrollHandler,\n} from \"./Gesture\";\nimport { Vector, vec } from \"./Vectors\";\nimport { loop } from \"./AnimationRunners\";\n\nconst { Clock, Value, diff, set, useCode, debug, block } = Animated;\n\nexport function useConst<T>(initialValue: T | (() => T)): T {\n  const ref = useRef<{ value: T }>();\n  if (ref.current === undefined) {\n    // Box the value in an object so we can tell if it's initialized even if the initializer\n    // returns/is undefined\n    ref.current = {\n      value:\n        typeof initialValue === \"function\"\n          ? // eslint-disable-next-line @typescript-eslint/ban-types\n            (initialValue as Function)()\n          : initialValue,\n    };\n  }\n  return ref.current.value;\n}\n\nexport const useGestureHandler = (\n  nativeEvent: Parameters<typeof onGestureEvent>[0]\n) => useConst(() => onGestureEvent(nativeEvent));\n\nexport const usePanGestureHandler = () => useConst(() => panGestureHandler());\nexport const useRotationGestureHandler = () =>\n  useConst(() => rotationGestureHandler());\nexport const usePinchGestureHandler = () =>\n  useConst(() => pinchGestureHandler());\nexport const useTapGestureHandler = () => useConst(() => tapGestureHandler());\nexport const useScrollHandler = () => useConst(() => scrollHandler());\n\ntype Atomic = string | number | boolean;\n\nexport const useVector = (\n  ...defaultValues: Parameters<typeof vec.createValue>\n) => useConst(() => vec.createValue(...defaultValues));\n\ntype P = Parameters<typeof vec.createValue>;\ntype R = Vector<Animated.Value<number>>;\ntype UseVectors = {\n  (...v: [P]): [R];\n  (...v: [P, P]): [R, R];\n  (...v: [P, P, P]): [R, R, R];\n  (...v: [P, P, P, P]): [R, R, R, R];\n  (...v: [P, P, P, P, P]): [R, R, R, R, R];\n  (...v: [P, P, P, P, P, P]): [R, R, R, R, R, R];\n  (...v: P[]): R[];\n};\n\nexport const useVectors = (((\n  ...defaultValues: Parameters<typeof vec.createValue>[]\n) =>\n  useConst(() =>\n    defaultValues.map((values) => vec.createValue(...values))\n  )) as unknown) as UseVectors;\n\nexport const useClock = () => useConst(() => new Clock());\n\nexport const useValue = <V extends Atomic>(value: V) =>\n  useConst(() => new Value(value));\n\nexport const usePhysicsState = () => ({\n  time: useValue(0),\n  position: useValue(0),\n  velocity: useValue(0),\n  finished: useValue(0),\n});\n\nexport const useSpringConfig = (\n  config: Partial<Omit<Animated.SpringConfig, \"toValue\">>\n) => ({\n  toValue: useValue(0),\n  damping: 15,\n  mass: 1,\n  stiffness: 150,\n  overshootClamping: false,\n  restSpeedThreshold: 1,\n  restDisplacementThreshold: 1,\n  ...config,\n});\n\nexport const useLoop = (duration = 1000, boomerang = true) => {\n  const progress = useValue(0);\n  useCode(() => set(progress, loop({ duration, boomerang })), [progress]);\n  return progress;\n};\n\ntype UseValues = {\n  <V extends Atomic>(v: V): [Animated.Value<V>];\n  <V1 extends Atomic, V2 extends Atomic>(v1: V1, v2: V2): [\n    Animated.Value<V1>,\n    Animated.Value<V2>\n  ];\n  <V1 extends Atomic, V2 extends Atomic, V3 extends Atomic>(\n    v1: V1,\n    v2: V2,\n    v3: V3\n  ): [Animated.Value<V1>, Animated.Value<V2>, Animated.Value<V3>];\n  <V1 extends Atomic, V2 extends Atomic, V3 extends Atomic, V4 extends Atomic>(\n    v1: V1,\n    v2: V2,\n    v3: V3,\n    v4: V4\n  ): [\n    Animated.Value<V1>,\n    Animated.Value<V2>,\n    Animated.Value<V3>,\n    Animated.Value<V4>\n  ];\n  <\n    V1 extends Atomic,\n    V2 extends Atomic,\n    V3 extends Atomic,\n    V4 extends Atomic,\n    V5 extends Atomic\n  >(\n    v1: V1,\n    v2: V2,\n    v3: V3,\n    v4: V4,\n    v5: V5\n  ): [\n    Animated.Value<V1>,\n    Animated.Value<V2>,\n    Animated.Value<V3>,\n    Animated.Value<V4>,\n    Animated.Value<V5>\n  ];\n  <V extends Atomic>(...values: V[]): Animated.Value<V>[];\n};\n\nexport const useValues = ((<V extends Atomic>(...values: [V, ...V[]]) =>\n  useConst(() => values.map((v) => new Value(v)))) as unknown) as UseValues;\n\nexport const useClocks = (numberOfClocks: number): Animated.Clock[] =>\n  useConst(() => new Array(numberOfClocks).fill(0).map(() => new Clock()));\n\nexport const useDiff = (node: Animated.Node<number>) => {\n  const dDiff = useValue(0);\n  useCode(() => set(dDiff, diff(node)), [dDiff, node]);\n  return dDiff;\n};\n\nexport const useDebug = (values: { [key: string]: Animated.Node<number> }) => {\n  const keys = Object.keys(values);\n  useCode(() => block(keys.map((name) => debug(name, values[name]))), [\n    keys,\n    values,\n  ]);\n};\n"]}
{"version":3,"sources":["Coordinates.ts"],"names":["Animated","atan2","sub","multiply","add","cos","sin","pow","sqrt","canvas2Cartesian","center","x","y","cartesian2Canvas","cartesian2Polar","theta","radius","polar2Cartesian","polar2Canvas","canvas2Polar"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,yBAArB,CAEA,OAASC,KAAT,KAAsB,QAAtB,C,GAGQC,CAAAA,G,CAA4CF,Q,CAA5CE,G,CAAKC,Q,CAAuCH,Q,CAAvCG,Q,CAAUC,G,CAA6BJ,Q,CAA7BI,G,CAAKC,G,CAAwBL,Q,CAAxBK,G,CAAKC,G,CAAmBN,Q,CAAnBM,G,CAAKC,G,CAAcP,Q,CAAdO,G,CAAKC,I,CAASR,Q,CAATQ,I,CAO3C,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAmBC,MAAnB,CAAsC,IAAnCC,CAAAA,CAAmC,MAAnCA,CAAmC,CAAhCC,CAAgC,MAAhCA,CAAgC,CACpE,MAAO,CACLD,CAAC,CAAET,GAAG,CAACS,CAAD,CAAID,MAAM,CAACC,CAAX,CADD,CAELC,CAAC,CAAET,QAAQ,CAACD,GAAG,CAACU,CAAD,CAAIF,MAAM,CAACE,CAAX,CAAJ,CAAmB,CAAC,CAApB,CAFN,CAAP,CAID,CALM,CAOP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,OAAmBH,MAAnB,KAAGC,CAAAA,CAAH,OAAGA,CAAH,CAAMC,CAAN,OAAMA,CAAN,OAAuC,CACrED,CAAC,CAAEP,GAAG,CAACO,CAAD,CAAID,MAAM,CAACC,CAAX,CAD+D,CAErEC,CAAC,CAAER,GAAG,CAACD,QAAQ,CAACS,CAAD,CAAI,CAAC,CAAL,CAAT,CAAkBF,MAAM,CAACE,CAAzB,CAF+D,CAAvC,EAAzB,CAKP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAAsB,IAAnBH,CAAAA,CAAmB,OAAnBA,CAAmB,CAAhBC,CAAgB,OAAhBA,CAAgB,CACnD,MAAO,CACLG,KAAK,CAAEd,KAAK,CAACW,CAAD,CAAID,CAAJ,CADP,CAELK,MAAM,CAAER,IAAI,CAACJ,GAAG,CAACG,GAAG,CAACI,CAAD,CAAI,CAAJ,CAAJ,CAAYJ,GAAG,CAACK,CAAD,CAAI,CAAJ,CAAf,CAAJ,CAFP,CAAP,CAID,CALM,CAOP,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,WAAGF,CAAAA,KAAH,OAAGA,KAAH,CAAUC,MAAV,OAAUA,MAAV,OAAoC,CACjEL,CAAC,CAAER,QAAQ,CAACa,MAAD,CAASX,GAAG,CAACU,KAAD,CAAZ,CADsD,CAEjEH,CAAC,CAAET,QAAQ,CAACa,MAAD,CAASV,GAAG,CAACS,KAAD,CAAZ,CAFsD,CAApC,EAAxB,CAKP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,OAAgCR,MAAhC,KAAGK,CAAAA,KAAH,OAAGA,KAAH,CAAUC,MAAV,OAAUA,MAAV,OAC1BH,CAAAA,gBAAgB,CAACI,eAAe,CAAC,CAAEF,KAAK,CAALA,KAAF,CAASC,MAAM,CAANA,MAAT,CAAD,CAAhB,CAAqCN,MAArC,CADU,EAArB,CAGP,MAAO,IAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,OAAmBT,MAAnB,KAAGC,CAAAA,CAAH,OAAGA,CAAH,CAAMC,CAAN,OAAMA,CAAN,OAC1BE,CAAAA,eAAe,CAACL,gBAAgB,CAAC,CAAEE,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAD,CAAWF,MAAX,CAAjB,CADW,EAArB","sourcesContent":["import Animated from \"react-native-reanimated\";\n\nimport { atan2 } from \"./Math\";\nimport { Vector } from \"./Vectors\";\n\nconst { sub, multiply, add, cos, sin, pow, sqrt } = Animated;\n\nexport interface PolarPoint {\n  theta: Animated.Adaptable<number>;\n  radius: Animated.Adaptable<number>;\n}\n\nexport const canvas2Cartesian = ({ x, y }: Vector, center: Vector) => {\n  return {\n    x: sub(x, center.x),\n    y: multiply(sub(y, center.y), -1),\n  };\n};\n\nexport const cartesian2Canvas = ({ x, y }: Vector, center: Vector) => ({\n  x: add(x, center.x),\n  y: add(multiply(y, -1), center.y),\n});\n\nexport const cartesian2Polar = ({ x, y }: Vector) => {\n  return {\n    theta: atan2(y, x),\n    radius: sqrt(add(pow(x, 2), pow(y, 2))),\n  };\n};\n\nexport const polar2Cartesian = ({ theta, radius }: PolarPoint) => ({\n  x: multiply(radius, cos(theta)),\n  y: multiply(radius, sin(theta)),\n});\n\nexport const polar2Canvas = ({ theta, radius }: PolarPoint, center: Vector) =>\n  cartesian2Canvas(polar2Cartesian({ theta, radius }), center);\n\nexport const canvas2Polar = ({ x, y }: Vector, center: Vector) =>\n  cartesian2Polar(canvas2Cartesian({ x, y }, center));\n"]}
{"version":3,"sources":["String.tsx"],"names":["Animated","concat","string","strings","values","length","result","reduce","acc","v","idx","push"],"mappings":"yEAAA,MAAOA,CAAAA,QAAP,KAAqB,yBAArB,C,GAEQC,CAAAA,M,CAAWD,Q,CAAXC,M,CAMR,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CACpBC,OADoB,CAGjB,+BADAC,MACA,qDADAA,MACA,0BACH,GAAIA,MAAM,CAACC,MAAP,GAAkB,CAAtB,CAAyB,CACvB,MAAOJ,CAAAA,MAAM,CAACE,OAAO,CAAC,CAAD,CAAR,CAAb,CACD,CACD,GAAMG,CAAAA,MAAM,CAAGF,MAAM,CAACG,MAAP,CACb,SAACC,GAAD,CAAMC,CAAN,CAASC,GAAT,qCAAqBF,GAArB,GAA0BL,OAAO,CAACO,GAAD,CAAjC,CAAwCD,CAAxC,IADa,CAEb,EAFa,CAAf,CAIAH,MAAM,CAACK,IAAP,CAAYR,OAAO,CAACA,OAAO,CAACE,MAAR,CAAiB,CAAlB,CAAnB,EACA,MAAOJ,CAAAA,MAAM,MAAN,2BAAUK,MAAV,EAAP,CACD,CAbM","sourcesContent":["import Animated from \"react-native-reanimated\";\n\nconst { concat } = Animated;\n\nexport type Concatable =\n  | Animated.Adaptable<string>\n  | Animated.Adaptable<number>;\n\nexport const string = (\n  strings: readonly string[],\n  ...values: readonly Concatable[]\n) => {\n  if (values.length === 0) {\n    return concat(strings[0]);\n  }\n  const result = values.reduce<Concatable[]>(\n    (acc, v, idx) => [...acc, strings[idx], v],\n    []\n  );\n  result.push(strings[strings.length - 1]);\n  return concat(...result);\n};\n"]}
{"version":3,"sources":["Matrix4.ts"],"names":["Animated","tan","add","multiply","cos","sin","divide","exhaustiveCheck","a","Error","identityMatrix4","translateXMatrix","x","translateYMatrix","y","translateZMatrix","z","scaleMatrix","s","scaleXMatrix","skewXMatrix","skewYMatrix","scaleYMatrix","perspectiveMatrix","p","rotateXMatrix","r","rotateYMatrix","rotateZMatrix","dot4","row","col","matrixVecMul4","m","v","multiply4","m1","m2","col0","col1","col2","col3","processTransform3d","transforms","reduce","acc","transform","key","Object","keys","value","matrix"],"mappings":"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","sourcesContent":["import Animated, { tan } from \"react-native-reanimated\";\n\nconst { add, multiply, cos, sin, divide } = Animated;\n\nexport type Vec4 = readonly [\n  Animated.Adaptable<number>,\n  Animated.Adaptable<number>,\n  Animated.Adaptable<number>,\n  Animated.Adaptable<number>\n];\n\nexport type Matrix4 = readonly [Vec4, Vec4, Vec4, Vec4];\n\ntype Transform3dName =\n  | \"translateX\"\n  | \"translateY\"\n  | \"translateZ\"\n  | \"scale\"\n  | \"scaleX\"\n  | \"scaleY\"\n  | \"skewX\"\n  | \"skewY\"\n  | \"rotateZ\"\n  | \"rotate\"\n  | \"perspective\"\n  | \"rotateX\"\n  | \"rotateY\"\n  | \"rotateZ\"\n  | \"matrix\";\ntype Transformations = {\n  [Name in Transform3dName]: Name extends \"matrix\"\n    ? Matrix4\n    : Animated.Adaptable<number>;\n};\nexport type Transforms3d = (\n  | Pick<Transformations, \"translateX\">\n  | Pick<Transformations, \"translateY\">\n  | Pick<Transformations, \"translateZ\">\n  | Pick<Transformations, \"scale\">\n  | Pick<Transformations, \"scaleX\">\n  | Pick<Transformations, \"scaleY\">\n  | Pick<Transformations, \"skewX\">\n  | Pick<Transformations, \"skewY\">\n  | Pick<Transformations, \"perspective\">\n  | Pick<Transformations, \"rotateX\">\n  | Pick<Transformations, \"rotateY\">\n  | Pick<Transformations, \"rotateZ\">\n  | Pick<Transformations, \"rotate\">\n  | Pick<Transformations, \"matrix\">\n)[];\n\nconst exhaustiveCheck = (a: never): never => {\n  throw new Error(`Unexhaustive handling for ${a}`);\n};\n\nexport const identityMatrix4: Matrix4 = [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateXMatrix = (x: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, x],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateYMatrix = (y: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, 1, 0, y],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateZMatrix = (z: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, z],\n  [0, 0, 0, 1],\n];\n\nconst scaleMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [s, 0, 0, 0],\n  [0, s, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst scaleXMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [s, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst skewXMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [1, tan(s), 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst skewYMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [tan(s), 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst scaleYMatrix = (s: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, s, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst perspectiveMatrix = (p: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, divide(-1, p), 1],\n];\n\nconst rotateXMatrix = (r: Animated.Adaptable<number>): Matrix4 => [\n  [1, 0, 0, 0],\n  [0, cos(r), multiply(-1, sin(r)), 0],\n  [0, sin(r), cos(r), 0],\n  [0, 0, 0, 1],\n];\n\nconst rotateYMatrix = (r: Animated.Adaptable<number>): Matrix4 => [\n  [cos(r), 0, sin(r), 0],\n  [0, 1, 0, 0],\n  [multiply(-1, sin(r)), 0, cos(r), 0],\n  [0, 0, 0, 1],\n];\n\nconst rotateZMatrix = (r: Animated.Adaptable<number>): Matrix4 => [\n  [cos(r), multiply(-1, sin(r)), 0, 0],\n  [sin(r), cos(r), 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nexport const dot4 = (row: Vec4, col: Vec4) => {\n  return add(\n    multiply(row[0], col[0]),\n    multiply(row[1], col[1]),\n    multiply(row[2], col[2]),\n    multiply(row[3], col[3])\n  );\n};\n\nexport const matrixVecMul4 = (m: Matrix4, v: Vec4) =>\n  [dot4(m[0], v), dot4(m[1], v), dot4(m[2], v), dot4(m[3], v)] as const;\n\nexport const multiply4 = (m1: Matrix4, m2: Matrix4) => {\n  const col0 = [m2[0][0], m2[1][0], m2[2][0], m2[3][0]] as const;\n  const col1 = [m2[0][1], m2[1][1], m2[2][1], m2[3][1]] as const;\n  const col2 = [m2[0][2], m2[1][2], m2[2][2], m2[3][2]] as const;\n  const col3 = [m2[0][3], m2[1][3], m2[2][3], m2[3][3]] as const;\n  return [\n    [\n      dot4(m1[0], col0),\n      dot4(m1[0], col1),\n      dot4(m1[0], col2),\n      dot4(m1[0], col3),\n    ],\n    [\n      dot4(m1[1], col0),\n      dot4(m1[1], col1),\n      dot4(m1[1], col2),\n      dot4(m1[1], col3),\n    ],\n    [\n      dot4(m1[2], col0),\n      dot4(m1[2], col1),\n      dot4(m1[2], col2),\n      dot4(m1[2], col3),\n    ],\n    [\n      dot4(m1[3], col0),\n      dot4(m1[3], col1),\n      dot4(m1[3], col2),\n      dot4(m1[3], col3),\n    ],\n  ] as const;\n};\n\nexport const processTransform3d = (transforms: Transforms3d) =>\n  transforms.reduce((acc, transform) => {\n    const key = Object.keys(transform)[0] as Transform3dName;\n    if (key === \"translateX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateXMatrix(value));\n    }\n    if (key === \"translateY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateYMatrix(value));\n    }\n    if (key === \"translateZ\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateZMatrix(value));\n    }\n    if (key === \"scale\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleMatrix(value));\n    }\n    if (key === \"scaleX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleXMatrix(value));\n    }\n    if (key === \"scaleY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleYMatrix(value));\n    }\n    if (key === \"skewX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, skewXMatrix(value));\n    }\n    if (key === \"skewY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, skewYMatrix(value));\n    }\n    if (key === \"rotateX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateXMatrix(value));\n    }\n    if (key === \"rotateY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateYMatrix(value));\n    }\n    if (key === \"perspective\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, perspectiveMatrix(value));\n    }\n    if (key === \"rotate\" || key === \"rotateZ\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateZMatrix(value));\n    }\n    if (key === \"matrix\") {\n      const matrix = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, matrix);\n    }\n    return exhaustiveCheck(key);\n  }, identityMatrix4);\n"]}
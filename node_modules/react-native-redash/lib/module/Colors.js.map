{"version":3,"sources":["Colors.ts"],"names":["interpolateColor","colorForBackground","r","g","b","L","mixColor","value","color1","color2","colorSpace"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,yBAAjC,CAQA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,CAAD,CAAYC,CAAZ,CAAuBC,CAAvB,CAAqC,CACrE,UACA,GAAMC,CAAAA,CAAC,CAAG,MAAQH,CAAR,CAAY,MAAQC,CAApB,CAAwB,MAAQC,CAA1C,CACA,MAAOC,CAAAA,CAAC,CAAG,GAAJ,CAAU,UAAV,CAAuB,UAA9B,CACD,CAJM,CAcP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CACtBC,KADsB,CAEtBC,MAFsB,CAGtBC,MAHsB,CAKnB,CACH,UADG,GADHC,CAAAA,UACG,2DADyB,KACzB,CAEH,MAAOV,CAAAA,gBAAgB,CACrBO,KADqB,CAErB,CAAC,CAAD,CAAI,CAAJ,CAFqB,CAKrB,CAACC,MAAD,CAAgBC,MAAhB,CALqB,CAMrBC,UANqB,CAAvB,CAQD,CAfM","sourcesContent":["import { interpolateColor } from \"react-native-reanimated\";\n\nexport type AnimatedColor = string | number;\n\n/**\n * @summary Returns black or white depending on the value of the background color.\n * @worklet\n */\nexport const colorForBackground = (r: number, g: number, b: number) => {\n  \"worklet\";\n  const L = 0.299 * r + 0.587 * g + 0.114 * b;\n  return L > 186 ? 0x000000ff : 0xffffffff;\n};\n\n/**\n * Interpolate color from 0 to 1\n * @param value\n * @param color1\n * @param color2\n * @param colorSpace\n * @worklet\n */\nexport const mixColor = (\n  value: number,\n  color1: AnimatedColor,\n  color2: AnimatedColor,\n  colorSpace: \"RGB\" | \"HSV\" = \"RGB\"\n) => {\n  \"worklet\";\n  return interpolateColor(\n    value,\n    [0, 1],\n    // TODO: remove any cast once https://github.com/software-mansion/react-native-reanimated/pull/1479 is merged\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [color1 as any, color2 as any],\n    colorSpace\n  );\n};\n"]}
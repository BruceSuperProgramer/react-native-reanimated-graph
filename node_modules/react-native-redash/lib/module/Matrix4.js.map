{"version":3,"sources":["Matrix4.ts"],"names":["exhaustiveCheck","a","Error","identityMatrix4","translateXMatrix","x","translateYMatrix","y","translateZMatrix","z","scaleMatrix","s","scaleXMatrix","skewXMatrix","Math","tan","skewYMatrix","scaleYMatrix","perspectiveMatrix","p","rotateXMatrix","r","cos","sin","rotateYMatrix","rotateZMatrix","dot4","row","col","matrixVecMul4","m","v","multiply4","m1","m2","col0","col1","col2","col3","processTransform3d","transforms","reduce","acc","transform","key","Object","keys","value","matrix"],"mappings":"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","sourcesContent":["export type Vec4 = readonly [number, number, number, number];\n\nexport type Matrix4 = readonly [Vec4, Vec4, Vec4, Vec4];\n\ntype Transform3dName =\n  | \"translateX\"\n  | \"translateY\"\n  | \"translateZ\"\n  | \"scale\"\n  | \"scaleX\"\n  | \"scaleY\"\n  | \"skewX\"\n  | \"skewY\"\n  | \"rotateZ\"\n  | \"rotate\"\n  | \"perspective\"\n  | \"rotateX\"\n  | \"rotateY\"\n  | \"rotateZ\"\n  | \"matrix\";\ntype Transformations = {\n  [Name in Transform3dName]: Name extends \"matrix\" ? Matrix4 : number;\n};\n\nexport type Transforms3d = (\n  | Pick<Transformations, \"translateX\">\n  | Pick<Transformations, \"translateY\">\n  | Pick<Transformations, \"translateZ\">\n  | Pick<Transformations, \"scale\">\n  | Pick<Transformations, \"scaleX\">\n  | Pick<Transformations, \"scaleY\">\n  | Pick<Transformations, \"skewX\">\n  | Pick<Transformations, \"skewY\">\n  | Pick<Transformations, \"perspective\">\n  | Pick<Transformations, \"rotateX\">\n  | Pick<Transformations, \"rotateY\">\n  | Pick<Transformations, \"rotateZ\">\n  | Pick<Transformations, \"rotate\">\n  | Pick<Transformations, \"matrix\">\n)[];\n\nconst exhaustiveCheck = (a: never): never => {\n  throw new Error(`Unexhaustive handling for ${a}`);\n};\n\nexport const identityMatrix4: Matrix4 = [\n  [1, 0, 0, 0],\n  [0, 1, 0, 0],\n  [0, 0, 1, 0],\n  [0, 0, 0, 1],\n];\n\nconst translateXMatrix = (x: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, x],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst translateYMatrix = (y: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, 0],\n    [0, 1, 0, y],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst translateZMatrix = (z: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, z],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst scaleMatrix = (s: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [s, 0, 0, 0],\n    [0, s, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst scaleXMatrix = (s: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [s, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst skewXMatrix = (s: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, Math.tan(s), 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst skewYMatrix = (s: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, 0],\n    [Math.tan(s), 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst scaleYMatrix = (s: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, 0],\n    [0, s, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst perspectiveMatrix = (p: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, -1 / p, 1],\n  ];\n};\n\nconst rotateXMatrix = (r: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [1, 0, 0, 0],\n    [0, Math.cos(r), -Math.sin(r), 0],\n    [0, Math.sin(r), Math.cos(r), 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst rotateYMatrix = (r: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [Math.cos(r), 0, Math.sin(r), 0],\n    [0, 1, 0, 0],\n    [-Math.sin(r), 0, Math.cos(r), 0],\n    [0, 0, 0, 1],\n  ];\n};\n\nconst rotateZMatrix = (r: number): Matrix4 => {\n  \"worklet\";\n  return [\n    [Math.cos(r), -Math.sin(r), 0, 0],\n    [Math.sin(r), Math.cos(r), 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n};\n\n/**\n * @worklet\n */\nexport const dot4 = (row: Vec4, col: Vec4) => {\n  \"worklet\";\n  return row[0] * col[0] + row[1] * col[1] + row[2] * col[2] + row[3] * col[3];\n};\n\n/**\n * @worklet\n */\nexport const matrixVecMul4 = (m: Matrix4, v: Vec4) => {\n  \"worklet\";\n  return [dot4(m[0], v), dot4(m[1], v), dot4(m[2], v), dot4(m[3], v)] as const;\n};\n\n/**\n * @worklet\n */\nexport const multiply4 = (m1: Matrix4, m2: Matrix4) => {\n  \"worklet\";\n  const col0 = [m2[0][0], m2[1][0], m2[2][0], m2[3][0]] as const;\n  const col1 = [m2[0][1], m2[1][1], m2[2][1], m2[3][1]] as const;\n  const col2 = [m2[0][2], m2[1][2], m2[2][2], m2[3][2]] as const;\n  const col3 = [m2[0][3], m2[1][3], m2[2][3], m2[3][3]] as const;\n  return [\n    [\n      dot4(m1[0], col0),\n      dot4(m1[0], col1),\n      dot4(m1[0], col2),\n      dot4(m1[0], col3),\n    ],\n    [\n      dot4(m1[1], col0),\n      dot4(m1[1], col1),\n      dot4(m1[1], col2),\n      dot4(m1[1], col3),\n    ],\n    [\n      dot4(m1[2], col0),\n      dot4(m1[2], col1),\n      dot4(m1[2], col2),\n      dot4(m1[2], col3),\n    ],\n    [\n      dot4(m1[3], col0),\n      dot4(m1[3], col1),\n      dot4(m1[3], col2),\n      dot4(m1[3], col3),\n    ],\n  ] as const;\n};\n\n/**\n * @worklet\n */\nexport const processTransform3d = (transforms: Transforms3d) => {\n  \"worklet\";\n  return transforms.reduce((acc, transform) => {\n    const key = Object.keys(transform)[0] as Transform3dName;\n    if (key === \"translateX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateXMatrix(value));\n    }\n    if (key === \"translateY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateYMatrix(value));\n    }\n    if (key === \"translateZ\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, translateZMatrix(value));\n    }\n    if (key === \"scale\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleMatrix(value));\n    }\n    if (key === \"scaleX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleXMatrix(value));\n    }\n    if (key === \"scaleY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, scaleYMatrix(value));\n    }\n    if (key === \"skewX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, skewXMatrix(value));\n    }\n    if (key === \"skewY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, skewYMatrix(value));\n    }\n    if (key === \"rotateX\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateXMatrix(value));\n    }\n    if (key === \"rotateY\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateYMatrix(value));\n    }\n    if (key === \"perspective\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, perspectiveMatrix(value));\n    }\n    if (key === \"rotate\" || key === \"rotateZ\") {\n      const value = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, rotateZMatrix(value));\n    }\n    if (key === \"matrix\") {\n      const matrix = (transform as Pick<Transformations, typeof key>)[key];\n      return multiply4(acc, matrix);\n    }\n    return exhaustiveCheck(key);\n  }, identityMatrix4);\n};\n"]}